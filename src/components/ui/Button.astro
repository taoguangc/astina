---
import type { HTMLAttributes } from 'astro/types'
import { Icon } from 'astro-icon/components'

type ButtonVariant = 'primary' | 'secondary' | 'outline' | 'borderless'
type ButtonSize = 'base' | 'sm'

type CommonProps = {
  variant?: ButtonVariant
  size?: ButtonSize
  showIcon?: boolean
}

type ButtonProps = HTMLAttributes<'button'> & CommonProps & { href?: never }
type AnchorProps = HTMLAttributes<'a'> & CommonProps & { href: string }
type Props = ButtonProps | AnchorProps

const { href, class: className, variant = 'primary', size = 'base', showIcon = true, ...rest } = Astro.props

const baseStyles = {
  primary: 'bg-primary text-white hover:brightness-[0.95]',
  secondary: 'bg-white text-gray-500 hover:brightness-[0.95]',
  outline: 'bg-white text-gray-900 border border-gray-800 hover:brightness-[0.95]',
  borderless: 'bg-white text-gray-900'
}

const sizeStyles = {
  base: 'px-6 py-3 text-base/[1.5]',
  sm: 'px-3 py-1.5 text-sm'
}

const commonStyles = ['inline-flex items-center gap-2 rounded-full transition-colors duration-200', baseStyles[variant], sizeStyles[size], className]
---

{
  href ? (
    <a href={href} class:list={[...commonStyles, 'group']} {...rest}>
      <slot />
      {showIcon && <Icon name="arrow-top-right" class="h-6 w-6 transition-transform duration-500 group-hover:rotate-45" />}
    </a>
  ) : (
    <button class:list={[...commonStyles, 'group']} {...(rest as HTMLAttributes<'button'>)}>
      <slot />
      {showIcon && <Icon name="arrow-top-right" class="h-6 w-6 transition-transform duration-500 group-hover:rotate-45" />}
    </button>
  )
}
